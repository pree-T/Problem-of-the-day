class Solution{   
public:
    int water_flow(vector<vector<int>> &mat,int m,int n){
        vector<vector<int>> ind(m,vector<int>(n,0));
        vector<vector<int>> arab(m,vector<int>(n,0));
        
        for(int i=0;i<n;i++)
        {
            if(ind[0][i]==0)
            {
                dfs(0,i,ind,1,mat,m,n);
            }
        }
        
         for(int i=0;i<m;i++)
        {
            if(ind[i][0]==0)
            {
                dfs(i,0,ind,1,mat,m,n);
            }
        }
        
         for(int i=0;i<n;i++)
        {
            if(arab[m-1][i]==0)
            {
                dfs(m-1,i,arab,2,mat,m,n);
            }
        }
        
         for(int i=0;i<m;i++)
        {
            if(arab[i][n-1]==0)
            {
                dfs(i,n-1,arab,2,mat,m,n);
            }
        }
        
        int count=0;
        
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(ind[i][j]==1 && arab[i][j]==2)
                {
                    ++count;
                }
            }
        }
        
        return count;
        
    
    
    }
    
    void dfs(int r,int c,vector<vector<int>> &vis,int val,vector<vector<int>> &mat,int m,int n)
    {
        // if(r<0 || c<0 || r>=m || c>=n || ind[r][c]==val)
        // return;
        vis[r][c]=val;
        if(r+1<m && mat[r+1][c]>=mat[r][c] && vis[r+1][c]==0)
        {
            dfs(r+1,c,vis,val,mat,m,n);
        }
        
         if(c+1<n && mat[r][c+1]>=mat[r][c] && vis[r][c+1]==0)
        {
            dfs(r,c+1,vis,val,mat,m,n);
        }
        
         if(r-1>=0 && mat[r-1][c]>=mat[r][c] && vis[r-1][c]==0)
        {
            dfs(r-1,c,vis,val,mat,m,n);
        }
        
         if(c-1>=0 && mat[r][c-1]>=mat[r][c] && vis[r][c-1]==0)
        {
            dfs(r,c-1,vis,val,mat,m,n);
        }
    }
};
