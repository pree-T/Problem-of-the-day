class Solution
{
    public:
    bool check(int n,int m,vector<vector<int>> edges)
    {
        vector<vector<int>> adj(n+1);
        for(int i=0;i<edges.size();i++)
        {
            adj[edges[i][0]].push_back(edges[i][1]);
            adj[edges[i][1]].push_back(edges[i][0]);
            
        }
        vector<int> vis(n+1,0);
        vector<int> path;
        for(int i=1;i<=n;i++)
        {
            if(dfs(i,n,adj,vis,path))
            return true;
        }
        return false;
    }
    
    bool dfs(int node,int n,vector<vector<int>> &adj,vector<int> &vis,vector<int> &path)
    {
        path.push_back(node);
        vis[node]=1;
        if(path.size()==n)
        return true;
        
        for(int x:adj[node])
        {
            if(!vis[x])
            {
                if(dfs(x,n,adj,vis,path))
                return true;
            }
        }
        path.pop_back();
        vis[node]=0;
        return false;
    }
};
