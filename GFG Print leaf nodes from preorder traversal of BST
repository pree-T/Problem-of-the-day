class Solution {
        vector<int> ans;
  public:
    vector<int> leafNodes(int arr[],int N) {
         vector<int>nextGreatest(N,-1);

        stack<int>st;

        for(int i=0;i<N;i++){

            if(st.empty()){

                st.push(i);

            }

            else{

                while( !st.empty() and arr[st.top()]<arr[i]){

                    nextGreatest[st.top()] = i;

                    st.pop();

                }

                st.push(i);

            }

        }        

        solve(arr,nextGreatest,0,N-1);

        return ans;
        
    }
    void solve(int a[], vector<int>&ng, int i, int j){

        if(i>j){

            return ;

        }

        if(i==j){

            ans.push_back(a[i]);

            return ;

        }

        int k = ng[i];

        if(k==-1){

            solve(a,ng,i+1,j);

        }

        else{

            solve(a,ng,i+1,k-1);

            solve(a,ng,k,j);

        }

    }
};
