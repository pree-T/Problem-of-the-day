class Solution {
public:
    int maxDistance(vector<vector<int>>& grid) {
      int m=grid.size();
      int n=grid[0].size();
        
        queue<pair<int,int>> q;
        int dirx[]={1,-1,0,0};
        int diry[]={0,0,1,-1};
        
        
        
      for(int i=0;i<m;i++)
      {
          for(int j=0;j<n;j++)
          {
              if(grid[i][j]==1)
              {
                  q.push({i,j});
              }
          }
      }
         if (q.empty() || q.size() == n * n) 
            return -1;
        int dis=-1;
       while(!q.empty())
       {
           int s=q.size();
           for(int i=0;i<s;i++)
           {
               int x=q.front().first;
               int y=q.front().second;
               q.pop();
               for(int dir=0;dir<4;dir++)
               {
                   int nx=x+dirx[dir];
                   int ny=y+diry[dir];
                   if(nx>=0 && nx<m && ny>=0 && ny<n && grid[nx][ny]==0)
                   {
                       grid[nx][ny]=1;
                       q.push({nx,ny});
                   }
               }
               
           }
           dis++;
       }
        return dis;
        
    }
};
