class Solution {
public:
    int findMaximizedCapital(int k, int w, vector<int>& profits, vector<int>& capital) {
        int n=profits.size();
        
        priority_queue<pair<int,int>> pq;
        
        for(int i=0;i<n;i++)
        {
           pq.push({profits[i],capital[i]}); 
        }
        int ans=0;
        
        while(k>0)
        {
            vector<pair<int,int>> v;
            int w1=w;
           
            while(k>0 && !pq.empty())
            {
                 int cap=pq.top().second;
                 int profit=pq.top().first;
                 pq.pop();
                if(cap<=w)
                {
                  // ans+=profit;
                  w+=profit;
                    --k;
                  break;
                }
                else
                {
                    v.push_back({profit,cap});
                }
                
            }
            
            if(w1==w)
            {
                break;
            }
            
            
            for(int i=0;i<v.size();i++)
            {
                pq.push({v[i].first,v[i].second});
            }
            
        }
        return w;
        
    }
};
