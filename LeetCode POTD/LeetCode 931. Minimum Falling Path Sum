class Solution {
public:
    int minFallingPathSum(vector<vector<int>>& matrix) {
        int n=matrix.size();
        int minsum=INT_MAX;
        vector<vector<int>> dp(n,vector<int>(n,-1));
        int ans=INT_MAX;
        for(int i=0;i<n;i++)
        {
            ans=min(ans,solve(0,i,n,matrix,dp));
        }
        
        return ans;
                    
    }
    
    int solve(int i,int j,int n,vector<vector<int>> &matrix, vector<vector<int>> &dp)
    {
        if(i<0 || j<0 || i>=n || j>=n)
        return 1e9;
        if(i==n-1)
        {
           
            return matrix[i][j];
        }
        if(dp[i][j]!=-1)
            return dp[i][j];
        
        int a=matrix[i][j]+solve(i+1,j,n,matrix,dp);
        int b=matrix[i][j]+solve(i+1,j+1,n,matrix,dp);
        int c=matrix[i][j]+solve(i+1,j-1,n,matrix,dp);
        return dp[i][j]=min(a,min(b,c));
        
        
    }
};
